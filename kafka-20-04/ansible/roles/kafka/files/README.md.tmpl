DigitalOcean One-Click for Apache Kafka Client Guide
====================================================

The configuration for this Kafka broker can be found in
{{ .Env.kafka_dir }}/config/server.properties. Transmitting PLAINTEXT data,
especially login credentials, over the public internet leaves your information
vulnerable. For security purposes, this Kafka server is configured with two
listeners:

 * 127.0.0.1:9092 - PLAINTEXT and no authentication required
 * 0.0.0.0:9093   - TLS/SSL using a self-signed certificate
   and SCRAM-SHA-256 authentication

PLAINTEXT connections are an easy way to get started, but they can only be
established from inside this server.

External Client configuration
-----------------------------

In order to produce and consume events over the public internet, Kafka clients
must connect to this server using TLS/SSL. Because the server's certificate
authority (CA) certificate is self-signed, the CA certificate must be
explicitly trusted by the client to properly verify the server's identity.

The {{ .Env.kafka_dir }}/one-click-ssl directory contains the following:

| File                      | Contents                                      |
|---------------------------|-----------------------------------------------|
| .keystore_password        | Password for Java KeyStores in this directory |
| ca.crt                    | Self-signed CA root certificate               |
| ca.key                    | CA private key                                |
| example.librdkafka.config | Client authentication configuration           |
| kafka.crt                 | Kafka server certificate signed by CA         |
| kafka.keystore.jks        | Java KeyStore containing ca.crt and kafka.crt |
| kafka.truststore.jks      | Java KeyStore containing ca.crt               |

Here's a short example that uses ["kcat"](https://github.com/edenhill/kcat),
an open-source command-line producer and consumer for Apache Kafka, to produce
and consume events from your local machine:

 1. Copy the example configuration and certificate authority (CA) root
    certificate to your local machine

    scp root@{{ .Env.droplet_public_ip }}:'{{ .Env.kafka_dir }}/one-click-ssl/{ca.crt,example.librdkafka.config}' .

 2. Produce a message

    echo 'Hello, TLS!' | kcat -P -b {{ .Env.droplet_public_ip }}:9093 \
      -F ./example.librdkafka.config \
      -X ssl.ca.location=./ca.crt \
      -t quickstart

 3. Consume the message

    kcat -C -b {{ .Env.droplet_public_ip }}:9093 \
      -F ./example.librdkafka.config \
      -X ssl.ca.location=./ca.crt \
      -t quickstart
